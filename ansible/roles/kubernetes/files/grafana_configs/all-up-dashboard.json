{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": true
      },
      "pluginVersion": "10.3.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb"
          },
          "query": "from(bucket: \"lessons\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ulfric_found\" or r[\"_measurement\"] == \"belethor_not_found\" or r[\"_measurement\"] == \"ballen_removed\" or r[\"_measurement\"] == \"ulfric_not_admin\" or r[\"_measurement\"] == \"sheogorath_removed\" or r[\"_measurement\"] == \"paarthurnax_identified\" or r[\"_measurement\"] == \"esbern_insecure\")\r\n  |> group(columns: [\"lesson\", \"student\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)\r\n  |> yield(name: \"sum\")",
          "refId": "A"
        }
      ],
      "title": "Total Scores",
      "transformations": [
        {
          "id": "timeSeriesTable",
          "options": {
            "A": {
              "stat": "lastNotNull",
              "timeField": "Time"
            }
          }
        },
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "lesson",
            "rowField": "student",
            "valueField": "Trend #A"
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "panels": [],
      "repeat": "Lessons",
      "repeatDirection": "h",
      "title": "$Lessons",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.3.1",
      "repeat": "students",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb"
          },
          "query": "from(bucket: \"lessons\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"lesson\"] == \"${Lessons}\")\r\n  |> filter(fn: (r) => r[\"student\"] == \"${students}\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ulfric_found\" or r[\"_measurement\"] == \"belethor_not_found\" or r[\"_measurement\"] == \"ballen_removed\" or r[\"_measurement\"] == \"ulfric_not_admin\" or r[\"_measurement\"] == \"sheogorath_removed\" or r[\"_measurement\"] == \"paarthurnax_identified\" or r[\"_measurement\"] == \"esbern_insecure\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)\r\n  |> last()\r\n  |> yield(name: \"sum\")",
          "refId": "A"
        }
      ],
      "title": "$students",
      "transformations": [
        {
          "id": "seriesToRows",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "Metric": "Check",
              "Time": "",
              "Value": "Points"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": ["All"],
          "value": ["$__all"]
        },
        "datasource": {
          "type": "influxdb"
        },
        "definition": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"lesson\",\r\n    predicate: (r) => true,\r\n    start: -1d\r\n)",
        "hide": 1,
        "includeAll": true,
        "label": "lessons",
        "multi": true,
        "name": "Lessons",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"lesson\",\r\n    predicate: (r) => true,\r\n    start: -1d\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": ["All"],
          "value": ["$__all"]
        },
        "datasource": {
          "type": "influxdb"
        },
        "definition": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"student\",\r\n    predicate: (r) => true,\r\n    start: -1d\r\n)",
        "hide": 1,
        "includeAll": true,
        "label": "students",
        "multi": true,
        "name": "students",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\r\nv1.tagValues(\r\n    bucket: v.bucket,\r\n    tag: \"student\",\r\n    predicate: (r) => true,\r\n    start: -1d\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "lesson scores",
  "version": 6,
  "weekStart": ""
}
