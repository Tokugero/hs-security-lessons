firewall {
    global-options {
        state-policy {
            established {
                action accept
            }
            invalid {
                action drop
            }
            related {
                action accept
            }
        }
    }
    group {
        interface-group LAN1 {
            interface eth1
            interface br0
        }
        interface-group WAN {
            interface eth0
        }
        network-group NET-INSIDE-v4 {
            network 192.168.128.0/23
        }
    }
    ipv4 {
        forward {
            filter {
                rule 100 {
                    action jump
                    destination {
                        group {
                            network-group NET-INSIDE-v4
                        }
                    }
                    inbound-interface {
                        group WAN
                    }
                    jump-target OUTSIDE-IN
                }
            }
        }
        input {
            filter {
                default-action drop
                rule 20 {
                    action jump
                    destination {
                        port 22
                    }
                    jump-target VyOS_MANAGEMENT
                    protocol tcp
                }
                rule 21 {
                    action jump
                    destination {
                        port 80
                    }
                    jump-target k8shttp
                    protocol tcp
                }
                rule 22 {
                    action jump
                    destination {
                        port 443
                    }
                    jump-target k8shttps
                    protocol tcp
                }
                rule 23 {
                    action jump
                    destination {
                        port 8080
                    }
                    jump-target k8shttpalt
                    protocol tcp
                }
                rule 24 {
                    action jump
                    destination {
                        port 6443
                    }
                    jump-target k8sapi
                    protocol tcp
                }
                rule 30 {
                    action accept
                    icmp {
                        type-name echo-request
                    }
                    protocol icmp
                    state new
                }
                rule 40 {
                    action accept
                    destination {
                        port 53
                    }
                    protocol tcp_udp
                    source {
                        group {
                            network-group NET-INSIDE-v4
                        }
                    }
                }
                rule 50 {
                    action accept
                    source {
                        address 127.0.0.0/8
                    }
                }
            }
        }
        name OUTSIDE-IN {
            default-action drop
        }
        name VyOS_MANAGEMENT {
            default-action return
            rule 15 {
                action accept
                inbound-interface {
                    group LAN1
                }
            }
            rule 20 {
                action drop
                inbound-interface {
                    group WAN
                }
                recent {
                    count 4
                    time minute
                }
                state new
            }
            rule 21 {
                action accept
                inbound-interface {
                    group WAN
                }
                state new
            }
        }
        name k8sapi {
            default-action return
        }
        name k8shttp {
            default-action return
        }
        name k8shttpalt {
            default-action return
        }
        name k8shttps {
            default-action return
        }
    }
}
interfaces {
    bridge br0 {
        address 192.168.128.1/23
        member {
            interface eth1 {
            }
            interface wlan0 {
            }
        }
    }
    ethernet eth0 {
        address dhcp
        description OUTSIDE
        hw-id 64:62:66:21:2c:fc
    }
    ethernet eth1 {
        description LAN1
        hw-id 64:62:66:21:2c:fd
    }
    ethernet eth2 {
        hw-id 64:62:66:21:2c:fe
    }
    ethernet eth3 {
        hw-id 64:62:66:21:2c:ff
    }
    loopback lo {
    }
    wireless wlan0 {
        channel 1
        country-code us
        disable-broadcast-ssid
        hw-id 00:15:61:27:a0:b2
        mode n
        physical-device phy0
        security {
            wpa {
                cipher CCMP
                mode wpa2
                passphrase ****************
            }
        }
        ssid sff-lab
        type access-point
    }
}
load-balancing {
    reverse-proxy {
        backend k8snodes {
            mode tcp
            server node-linux-001 {
                address 192.168.128.210
                port 80
            }
            server node-linux-002 {
                address 192.168.128.211
                port 80
            }
            server node-linux-003 {
                address 192.168.128.212
                port 80
            }
        }
        backend k8snodes-alt {
            mode tcp
            server node-linux-001 {
                address 192.168.128.210
                port 8080
            }
            server node-linux-002 {
                address 192.168.128.211
                port 8080
            }
            server node-linux-003 {
                address 192.168.128.212
                port 8080
            }
        }
        backend k8snodes-https {
            mode tcp
            server node-linux-001 {
                address 192.168.128.210
                port 443
            }
            server node-linux-002 {
                address 192.168.128.211
                port 443
            }
            server node-linux-003 {
                address 192.168.128.212
                port 443
            }
        }
        service althttp {
            backend k8snodes-alt
            mode tcp
            port 8080
        }
        service http {
            backend k8snodes
            mode tcp
            port 80
        }
        service https {
            backend k8snodes-https
            mode tcp
            port 443
        }
    }
}
nat {
    destination {
        rule 100 {
            description "Regular destination NAT from external"
            destination {
                port 6443
            }
            inbound-interface {
                name eth0
            }
            protocol tcp
            translation {
                address 192.168.128.200
            }
        }
        rule 110 {
            description "NAT Reflection: INSIDE"
            destination {
                port 6443
            }
            inbound-interface {
                name eth1
            }
            protocol tcp
            translation {
                address 192.168.128.200
            }
        }
    }
    source {
        rule 100 {
            outbound-interface {
                name eth0
            }
            source {
                address 192.168.128.0/23
            }
            translation {
                address masquerade
            }
        }
        rule 110 {
            description "NAT Reflection: INSIDE"
            destination {
                address 192.168.128.0/23
            }
            outbound-interface {
                name eth1
            }
            protocol tcp
            source {
                address 192.168.128.0/23
            }
            translation {
                address masquerade
            }
        }
    }
}
service {
    dhcp-server {
        shared-network-name LAN1 {
            subnet 192.168.128.0/23 {
                option {
                    default-router 192.168.128.1
                    domain-name sff-lab.net
                    name-server 192.168.128.1
                }
                range 0 {
                    start 192.168.129.100
                    stop 192.168.129.200
                }
                static-mapping controller-001 {
                    ip-address 192.168.128.200
                    mac d8:3a:dd:ae:a6:98
                }
                static-mapping node-linux-001 {
                    ip-address 192.168.128.210
                    mac ec:b1:d7:5f:50:76
                }
                static-mapping node-linux-002 {
                    ip-address 192.168.128.211
                    mac 64:51:06:51:2b:52
                }
                static-mapping node-linux-003 {
                    ip-address 192.168.128.212
                    mac 64:51:06:51:2b:93
                }
                subnet-id 1
            }
        }
    }
    dns {
        forwarding {
            allow-from 192.168.128.0/23
            cache-size 0
            listen-address 192.168.128.1
        }
    }
    ntp {
        allow-client {
            address 0.0.0.0/0
            address ::/0
        }
        server time1.vyos.net {
        }
        server time2.vyos.net {
        }
        server time3.vyos.net {
        }
    }
    ssh {
        port 22
    }
}
system {
    config-management {
        commit-revisions 100
    }
    conntrack {
        modules {
            ftp
            h323
            nfs
            pptp
            sip
            sqlnet
            tftp
        }
    }
    console {
        device ttyS0 {
            speed 115200
        }
    }
    host-name vyos
    login {
        user vyos {
            authentication {
                encrypted-password ****************
                plaintext-password ****************
            }
        }
    }
    syslog {
        global {
            facility all {
                level info
            }
            facility local7 {
                level debug
            }
        }
    }
}